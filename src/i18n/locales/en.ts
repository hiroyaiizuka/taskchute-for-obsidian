export const en = {
  common: {
    close: "Close",
    cancel: "Cancel",
    confirm: "Confirm",
    loading: "Loading",
    none: "None",
    yes: "Yes",
    no: "No",
    ok: "OK",
    clear: "Clear",
    delete: "Delete",
  },
  settings: {
    heading: "Paths",
    storage: {
      baseLocationName: "Default storage location",
      baseLocationDesc: "Save Task/Log/Review under the selected base.",
      baseOptions: {
        vaultRoot: "Vault root (TaskChute/...)",
        specifiedFolder: "Below specified folder",
      },
      specifiedFolderName: "Specified folder",
      specifiedFolderDesc: "TaskChute/... will be created under this folder.",
      projectsFolderName: "Project files location",
      projectsFolderDesc: "Folder for project notes (optional).",
      previewName: "Resolved paths",
    },
    projectCandidates: {
      heading: "Project candidates",
      enable: "Use filters",
      enableDesc: "Filter project candidates by prefixes, tags, etc.",
      matchMode: "Match mode",
      matchModeDesc: "How to combine multiple rules",
      or: "Match any (OR)",
      and: "Match all (AND)",
      prefixes: "Filename prefixes",
      prefixesDesc: "Comma-separated. e.g., Project -",
      tags: "Tags",
      tagsDesc: "Comma-separated without #. e.g., project",
      includeSubfolders: "Include subfolders",
      limit: "Max candidates",
      displayHeading: "Display",
      trimPrefixes: "Hide prefixes in display",
      transformName: "Normalize name (_ and - to space)",
      advanced: "Advanced filters (optional)",
      nameRegex: "Filename regex",
      excludePathRegex: "Exclude path regex",
      test: "Test candidates",
      testDesc: "Shows how many notes currently match.",
      testResult: "{count} candidates (before content filters)",
    },
    taskFolder: {
      name: "Task folder path",
      description: "Path to the folder where task files are stored",
    },
    projectFolder: {
      name: "Project folder path",
      description: "Path to the folder where project files are stored",
    },
    logDataFolder: {
      name: "Log data path",
      description: "Path to the folder where execution logs are stored",
    },
    reviewDataFolder: {
      name: "Review data path",
      description: "Path to the folder where review data is stored",
    },
    language: {
      name: "Language",
      description: "Override the plugin language",
      options: {
        auto: "Follow Obsidian",
        en: "English",
        ja: "Japanese",
      },
    },
    validation: {
      invalidPath: "Invalid path",
    },
    openFailed: "Unable to open TaskChute settings",
  },
  paths: {
    taskFolder: "Task folder",
    projectFolder: "Project folder",
    logDataFolder: "Log data folder",
    reviewDataFolder: "Review data folder",
    errors: {
      absoluteNotAllowed: "Absolute paths are not allowed",
      parentSegmentNotAllowed: "Paths cannot include '..'",
      invalidCharacters: "Paths cannot contain special characters",
    },
    features: {
      heading: "External tools",
      robotButton: "Show Terminal button",
      robotButtonDesc: "Enable AI integration via Terminal (requires Terminal plugin).",
    },
  },
  commands: {
    openView: "Open TaskChute",
    openSettings: "TaskChute settings",
    duplicateSelected: "Duplicate selected task",
    deleteSelected: "Delete selected task",
    resetSelected: "Reset selected task",
    showToday: "Show today's tasks",
    reorganizeIdle: "Reorganize idle tasks to current slot",
  },
  notices: {
    viewNotOpen: "TaskChute view is not open",
    folderCreationFailed: "Failed to create {label}",
    routineAliasLoadFailed: "Failed to load routine alias history",
    routineAliasSaveFailed: "Failed to save routine alias history",
    taskCreated: "Created task \"{name}\"",
    reviewDisplayFailed: "Failed to display review: {message}",
    routineDetached: "Detached from routine",
    routineEnabled: "Routine enabled",
    routineDisabled: "Routine disabled",
    projectFolderUnset: "Project files location is not set. Open settings to choose a folder.",
  },
  taskChuteView: {
    header: {
      openNavigation: "Open navigation",
      openCalendar: "Open calendar",
      addTask: "Add new task",
      openTerminal: "Open terminal",
      terminalOpenFailed: "Failed to open terminal: {message}",
      terminalPluginMissing: "Terminal plugin not found. Please install it.",
    },
    navigation: {
      routine: "Routine",
      review: "Review",
      log: "Log",
      project: "Project",
      settings: "Settings",
    },
    date: {
      today: "Today",
    },
    lists: {
      noTime: "No time",
      completed: "Completed tasks",
      weekdaysOnlySuffix: " - Weekdays only",
      weekendsOnlySuffix: " - Weekends only",
    },
    buttons: {
      start: "Start",
      stop: "Stop",
      remeasureCompleted: "Re-measure completed task",
      resetToNotStarted: "‚Ü©Ô∏è Reset to not started",
      setStartTime: "üïê Set start time",
      moveTask: "üìÖ Move task",
      duplicateTask: "üìÑ Duplicate task",
      deleteTask: "üóëÔ∏è Delete task",
      removeProject: "‚ûñ Remove project",
      removeRoutine: "Remove from routine",
      cancel: "Cancel",
      save: "Save",
      clear: "Clear",
      edit: "Edit",
      enable: "Enable",
      disable: "Disable",
    },
    status: {
      unassignedTask: "Unassigned task",
      alreadyNotStarted: "This task is already not started",
      idleFeatureWip: "Idle task reordering is under construction",
      contextMenuWip: "Context menu is under construction",
      noRoutineFound: "No routines found",
      weekdaysOnly: "Weekdays only",
      weekendsOnly: "Weekends only",
      noWeekdaySelected: "No weekday set",
    },
    notices: {
      futureTaskPrevented: "Cannot start a future task.",
      futureTaskPreventedWithPeriod: "Cannot start a future task.",
      idleReorganized: "Reorganized idle tasks",
      taskFileMissing: "Task file not found",
      taskFileOpenFailed: "Failed to open task file",
      taskCreationFailed: "Failed to create task",
      taskCreationInvalidFilename: "Failed to create task: filename contains invalid characters",
      taskDuplicateFailed: "Failed to duplicate task",
      taskDeleteFailed: "Failed to delete task",
      taskResetFailed: "Failed to reset task",
      taskStartFailed: "Failed to start task",
      taskStopFailed: "Failed to stop task",
      taskMoveFailed: "Failed to move task",
      taskMoveClearFailed: "Failed to clear task destination",
      commentSaved: "Comment saved",
      commentSaveFailed: "Failed to save comment",
      projectUpdateFailed: "Failed to update project",
      projectPickerFailed: "Failed to open project picker",
      projectListFailed: "Failed to load project list",
      projectSetFailed: "Failed to set project",
      projectOpenFailed: "Failed to open project file",
      projectNotFound: "Project file not found.",
      projectTagMissing: "Add the #project tag to the project file.",
      routineSetFailed: "Failed to set routine task: {message}",
      routineDetachFailed: "Failed to remove from routine",
      runningTaskSaveFailed: "[TaskChute] Failed to save running task:",
      runningTaskRestoreFailed: "[TaskChute] Failed to restore running task:",
      taskNotSelected: "No task selected",
      cannotPlaceAboveCompleted: "Cannot place above running or completed tasks",
      taskMoveSuccess: "Moved task to {date}",
      taskDuplicated: 'Duplicated "{title}"',
      routineSetSuccess: 'Set "{title}" as a routine task (starts at {time})',
      taskStarted: 'Started {name}',
      taskCompleted: 'Completed {name} ({minutes} min)',
      taskTimesUpdated: 'Updated times for "{title}"',
      runningStartUpdated: 'Updated start time for "{title}"',
      restoredToRunning: 'Moved "{title}" back to running',
      showToday: "Showing today's tasks",
      sectionWip: '{section} is under construction',
      restoredToIdle: 'Moved "{title}" back to idle',
      taskDeletedPermanent: 'Permanently deleted the task.',
      taskRemovedFromToday: 'Removed task from today.',
      taskRemovedFromTodayWithTitle: 'Removed "{title}" from today.',
      taskMoveCleared: 'Cleared destination for "{title}"',
    },
    tooltips: {
      dragToMove: "Drag to move",
      reopenProject: "Open project note",
      clickToSetProject: "Set project",
      reorganizeIdle: "Reorganize idle tasks",
      removeProject: "Remove project",
      completedTask: "Completed task",
      routineScheduled: 'Routine task (starts at {time})',
      crossDayTask: "Cross-day task",
      routineAssigned: "Routine task",
      routineSet: "Set as routine",
      toggleRoutine: "Toggle enabled state",
    },
    moveCalendar: {
      prevMonth: "Previous month",
      nextMonth: "Next month",
      clear: "Clear",
      today: "Today",
    },
    project: {
      none: "No project",
      tooltipAssigned: "Project: {title}",
      openNote: "Open project note",
      clickToSet: "Set project",
      linked: 'Linked "{title}" to {project}',
      unlinked: 'Removed project link from "{title}"',
      fileMissing: 'Task file "{title}.md" not found',
      fileMissingPath: 'Project file not found: {path}',
      settingsSaved: "Project settings saved",
      noFiles: "No project files found.",
      addTagHint: "Add the #project tag to your project files.",
      selectLabel: "Select project:",
      instructionsLinked: 'Select another project or choose "Remove project" to clear the assignment.',
      instructionsUnlinked: 'Assigning a project lets you review related tasks from the project page.',
      noteSyncFailed: 'Failed to update project note: {message}',
      settingsTitle: 'Project settings for "{title}"',
      logHeading: "## Log",
      noteNotFound: 'Project note not found: {path}',
    },
    comment: {
      editTitle: 'Edit comment for "{title}"',
      completedTitle: 'Great job! "{title}" completed',
      duration: 'Duration: {duration}',
      timeRange: 'Start: {start} End: {end}',
      question: 'How was this task?',
      focusLabel: 'Focus:',
      energyLabel: 'Energy:',
      fieldLabel: 'Notes / learnings / improvements:',
      placeholder: 'Share any thoughts, learnings, or improvements for next time...',
      saved: 'Comment saved',
      saveFailed: 'Failed to save comment',
    },
    addTask: {
      title: 'Add new task',
      nameLabel: 'Task name:',
      namePlaceholder: 'Enter task name',
    },
    forms: {
      taskSettings: "Task settings",
      timeEditTitle: 'Edit times for "{title}"',
      projectSectionTitle: "Project settings",
      routineSectionTitle: "Routine settings",
      routineType: "Routine type:",
      routineDaily: "Daily",
      routineWeekly: "Weekly (by weekday)",
      routineMonthly: "Monthly (weekday)",
      interval: "Interval:",
      enabled: "Enabled:",
      selectWeekdays: "Select weekdays:",
      selectWeekdaysPrompt: "Please select at least one weekday",
      monthlySettings: "Monthly settings:",
      nth: "Nth",
      weekOf: " week",
      weekday: " weekday",
      lastWeek: "Last",
      weekdaySuffix: " weekday",
      scheduledTimeLabel: "Scheduled start time:",
      scheduledTimeModalTitle: "Set scheduled start time",
      scheduledTimePlaceholder: "Enter a scheduled start time",
      startTimeRequired: "Scheduled start time is required",
      startTimeBeforeEnd: "Scheduled start time must be before end time",
      startTimeDeleted: "Removed scheduled start time",
      startTimeUpdated: "Scheduled start time set to {time}",
      startTimeUpdateFailed: "Failed to update scheduled start time",
      startTimeRemovedHint: "Removing the scheduled start time resets the task to not started.",
      startTimeInfo: "Set the scheduled start time. Leave empty to clear it.",
      endTimeLabel: "End time:",
      endTimeResetHint: "Delete end time only: back to running\\nDelete both: back to not started",
      satisfactionQuestion: "How was this task?",
      focusLabel: "Focus level:",
      energyLabel: "Energy level:",
      reflectionLabel: "Notes / Learnings / Next improvements:",
      reflectionPlaceholder: "Write any thoughts, learnings, or improvements for next time...",
      feedbackPrompt: "This task is not started",
      feedbackDescription: "Reset the task to its pre-start state",
      deleteConfirmTitle: "Confirm task deletion",
      deleteConfirmBody: "Delete \"{task}\"?",
      moveDescription: "Move the task to another date",
      duplicateDescription: "Insert a duplicate task below",
      projectNone: "No project",
      projectLabel: "Project:",
      projectSelectLabel: "Select project:",
      projectRemove: "Remove project",
      projectRemoveInstructions: "Select another project or choose \"Remove project\" to clear it.",
      projectAssignInfo: "Assigning a project lets you review related tasks from the project page.",
      nameLabel: "Task name:",
      namePlaceholder: "Enter task name",
      nameRequired: "Please enter a task name",
    },
    labels: {
      routineList: "Routine list",
      routineToggleHelp: "Toggle routines on or off. Edit details from each task's settings.",
      noRoutineTitle: "Routine",
      logTab: "Log",
      reviewTab: "Review",
      projectTab: "Project",
      weekdaysHeader: "Select weekdays:",
      weekdays: {
        sunday: "Sun",
        monday: "Mon",
        tuesday: "Tue",
        wednesday: "Wed",
        thursday: "Thu",
        friday: "Fri",
        saturday: "Sat",
        sundayShort: "Sun",
        mondayShort: "Mon",
        tuesdayShort: "Tue",
        wednesdayShort: "Wed",
        thursdayShort: "Thu",
        fridayShort: "Fri",
        saturdayShort: "Sat",
      },
      routineDailyLabel: 'Every {interval} day(s)',
      routineWeeklyLabel: 'Every {interval} week(s) on {day}',
      routineMonthlyLabel: 'Every {interval} month(s) on {week} {day}',
      routineWeekNth: 'Week {week}',
      routineWeekLast: 'Last week',
      routineDayUnset: 'No weekday set',
    },
    validator: {
      invalidChars: "Task name contains invalid characters: {chars}",
      routineTargetBeforeStart:
        'target_date({targetDate}) is before routine_start({routineStart}). The task will not appear.',
      routineTargetPast: 'target_date({targetDate}) is in the past. It will not appear today.',
      routineTargetFuture: 'target_date({targetDate}) is in the future. It will not appear until that date.',
      suggestionRemoveTargetDate: 'Remove target_date.',
      suggestionRemoveTargetDateNonCross: 'Remove target_date unless this is a cross-day move.',
      suggestionRemoveTargetDateToday: 'Remove target_date if you want it to appear today.',
      nonRoutineStale: 'This task has been idle for {days} days.',
      suggestionReviewOrDelete: 'Run the task or consider deleting it.',
      routineIntervalTooLong: 'Routine interval of {days} days is unusually long.',
      suggestionReviewInterval: 'Review the interval setting.',
    },
  },
  logView: {
    weekdays: {
      sunday: "Sun",
      monday: "Mon",
      tuesday: "Tue",
      wednesday: "Wed",
      thursday: "Thu",
      friday: "Fri",
      saturday: "Sat",
    },
    header: {
      title: "Task execution log",
      reloadButton: "üîÑ Refresh data",
      reloadTooltip: "Clear cache and recalculate",
      loading: "Loading data...",
      recalculating: "Recalculating data...",
    },
    notices: {
      reloadSuccess: "Updated data for {year}",
      reloadFailure: "Failed to load data for {year}",
      loadFailure: "Failed to load data for {year}",
      yearUnavailable: "No data available for {year}",
      loadFailedGeneric: "Failed to load data.",
    },
    labels: {
      yearOption: "{year}",
      tooltipNoData: "No data",
      openTaskList: "Open task list",
      openTaskListAria: "Open task list for {date}",
      totalTasks: "Total tasks",
      completedTasks: "Completed",
      postponedTasks: "Deferred",
      totalTime: "Total time",
      completionRate: "Completion rate",
      noEntries: "No execution logs recorded for this day.",
      tableHeaders: {
        taskName: "Task name",
        taskNameWithCount: "Task name ({count})",
        executionTime: "Execution time",
        duration: "Duration",
        focus: "Focus",
        energy: "Energy",
        comment: "Comment",
      },
      satisfactionEmpty: "Daily satisfaction: -",
      satisfactionValue: "Daily satisfaction: {value}/5",
      selectDate: "Select a date",
      loadingDate: "Loading data for {date}...",
      futureDate: "This is a future date. No records yet.",
      selectDatePrompt: "Select a date",
    },
    durations: {
      zeroMinutes: "0 minutes",
      hoursAndMinutes: "{hours}h {minutes}m",
      hoursOnly: "{hours}h",
      minutesOnly: "{minutes}m",
      lessThanMinute: "Under 1 minute",
    },
    summaries: {
      noTasks: "{formatted}\nNo tasks",
      stats: "{formatted}\nTotal tasks: {total}\nCompleted: {completed}\nDeferred: {deferred}\nCompletion rate: {rate}%",
    },
  },
  routineManager: {
    weekdays: {
      sunday: "Sun",
      monday: "Mon",
      tuesday: "Tue",
      wednesday: "Wed",
      thursday: "Thu",
      friday: "Fri",
      saturday: "Sat",
    },
    dialog: {
      title: "Routine manager",
      searchPlaceholder: "Search (title / path)",
      columns: {
        title: "Title",
        type: "Type",
        interval: "Interval",
        weekdays: "Weekdays",
        week: "Week",
        startTime: "Scheduled time",
        startDate: "Start date",
        endDate: "End date",
        enabled: "Enabled",
        actions: "Actions",
      },
    },
    confirm: {
      heading: "Confirm",
      removeMessage: "Remove \"{name}\" from routines?",
      removeButton: "Remove",
      cancelButton: "Cancel",
    },
    tooltips: {
      toggleEnable: "Toggle enabled state",
      removeRoutine: "Remove from routine",
      editRoutine: "Edit",
    },
    status: {
      noneFound: "No routines found",
    },
    types: {
      daily: "Daily",
      weekly: "Weekly",
      monthly: "Monthly",
    },
    notices: {
      toggledOn: "Enabled",
      toggledOff: "Disabled",
      removed: "Removed from routine",
    },
    labels: {
      weekdaySuffix: "",
      weekNth: "Week {week}",
      weekLast: "Last",
    },
  },
  routineEdit: {
    title: 'Routine settings for "{name}"',
    fields: {
      typeLabel: 'Type:',
      startTimeLabel: 'Scheduled time:',
      intervalLabel: 'Interval:',
      enabledLabel: 'Enabled:',
      startDateLabel: 'Start date:',
      endDateLabel: 'End date:',
      weekdaysLabel: 'Weekdays (multi-select):',
      monthWeekLabel: 'Week:',
      monthWeekSuffix: ' of ',
      monthWeekdaySuffix: '',
      saveButton: 'Save',
      cancelButton: 'Cancel',
    },
    types: {
      daily: 'Daily',
      weekly: 'Weekly (weekday)',
      monthly: 'Monthly (Nth weekday)',
    },
    weekOptions: {
      first: '1st',
      second: '2nd',
      third: '3rd',
      fourth: '4th',
      fifth: '5th',
      last: 'Last',
    },
    errors: {
      intervalInvalid: 'Interval must be an integer of 1 or greater.',
      startDateFormat: 'Start date must use YYYY-MM-DD format.',
      endDateFormat: 'End date must use YYYY-MM-DD format.',
      endBeforeStart: 'End date must be on or after the start date.',
      weeklyRequiresDay: 'Select at least one weekday.',
      monthlyRequiresSelection: 'Choose an "Nth + weekday" combination.',
    },
    notices: {
      legacyTargetDateRemoved: 'Removed legacy target_date automatically.',
      saved: 'Saved.',
    },
  },
};

export type EnLocale = typeof en;
