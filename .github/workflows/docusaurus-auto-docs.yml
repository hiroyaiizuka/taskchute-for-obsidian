name: Docusaurus Documentation Automation

on:
  pull_request:
    branches: [main, develop]
    paths:
      - "src/**/*.ts"
      - "src/**/*.js"
      - "!taskchute-docs/**"
      - "!tests/**"
      - "!**/*.test.ts"
      - "!**/*.test.js"
      - "!.github/**"
      - "!**/node_modules/**"
      - "!**/dist/**"
      - "!**/build/**"

jobs:
  auto-document:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          # PRの「head」を直接チェックアウトすると差分計算が安定
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      # docusaurus-expert の存在チェック（条件分岐を修正）
      - name: Check Claude agent file
        run: |
          if [ -f "taskchute-docs/.claude/agents/docusaurus-expert.md" ]; then
            echo "✓ Found: taskchute-docs/.claude/agents/docusaurus-expert.md"
          else
            echo "❌ Missing: taskchute-docs/.claude/agents/docusaurus-expert.md"
            exit 1
          fi

      # 変更ファイルの取得（base/head の SHA を使用）
      - name: Get changed files
        id: changed
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          CHANGED_FILES=$(git diff --name-only "$BASE_SHA" "$HEAD_SHA" | tr '\n' ' ')
          echo "files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"
          echo "Changed files: $CHANGED_FILES"

      # Claude Code の working dir を明示しつつ、プロンプトでは絶対相対パスを使う
      - name: Update documentation
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          working-directory: . # ← ルートを基準にする
          prompt: |
            Read and follow the instructions in taskchute-docs/.claude/agents/docusaurus-expert.md

            Changed files in this pull request:
            ${{ steps.changed.outputs.files }}

            ## Project Context
            This is TaskChute Plus, an Obsidian plugin for time management based on TaskChute methodology.
            The documentation is located in the taskchute-docs/ directory using Docusaurus.

            ## Requirements
            1. The Docusaurus documentation is in: taskchute-docs/docs/
            2. Update documentation for any changed functionality in src/
            3. Add new documentation for new features
            4. Update API references if function signatures changed
            5. Ensure all code examples match the current TypeScript implementation

            ## Project-specific rules
            - Primary documentation language: Japanese (日本語)
            - Include both Japanese and English for technical terms where helpful
            - Code examples should include TypeScript types
            - Follow existing documentation structure in taskchute-docs/docs/
            - Update feature documentation when src/ files change
            - Focus on user-facing changes and API updates

            ## File Structure
            - Source code: src/ (TypeScript)
            - Documentation: taskchute-docs/docs/
            - Configuration: taskchute-docs/docusaurus.config.ts, taskchute-docs/sidebars.ts

          claude_args: "--max-turns 15 --dangerously-skip-permissions"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: update via docusaurus-expert agent"
          title: "📚 Documentation Update"
          body: |
            Automated documentation update based on pull request changes.

            **Changed files:**
            ```
            ${{ steps.changed.outputs.files }}
            ```
          branch: docs/auto-${{ github.sha }}
          base: main
