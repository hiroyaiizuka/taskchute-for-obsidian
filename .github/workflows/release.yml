name: Release Obsidian plugin

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install & Build
        run: |
          npm ci || npm install
          npm run build

      - name: Prepare release assets
        run: |
          set -e
          TAG="${{ github.ref_name }}"
          PKG_DIR="release-${TAG}"
          mkdir -p "$PKG_DIR"

          if   [ -f packages/obsidian-plugin/main.js ]; then SRC_MAIN=packages/obsidian-plugin/main.js
          elif [ -f dist/main.js ]; then SRC_MAIN=dist/main.js
          elif [ -f main.js ]; then SRC_MAIN=main.js
          else
            echo "ERROR: main.js が見つかりません。"; exit 1
          fi
          cp "$SRC_MAIN" "$PKG_DIR/main.js"

          if [ ! -f manifest.json ]; then
            echo "ERROR: manifest.json が見つかりません。"; exit 1
          fi
          cp manifest.json "$PKG_DIR/manifest.json"

          if   [ -f packages/obsidian-plugin/styles.css ]; then SRC_CSS=packages/obsidian-plugin/styles.css
          elif [ -f styles.css ]; then SRC_CSS=styles.css
          else
            echo "ERROR: styles.css が見つかりません。"; exit 1
          fi
          cp "$SRC_CSS" "$PKG_DIR/styles.css"

          (cd "$PKG_DIR" && zip -r "../${PKG_DIR}.zip" .)
          echo "PKG_DIR=$PKG_DIR" >> $GITHUB_ENV

      - name: Create GitHub Release (published)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="${{ github.ref_name }}"
          gh release create "$TAG" \
            --title "$TAG" \
            --notes "Automated release ($TAG)" \
            "${PKG_DIR}.zip" \
            "${PKG_DIR}/main.js" \
            "${PKG_DIR}/manifest.json" \
            "${PKG_DIR}/styles.css"
